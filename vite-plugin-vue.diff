diff --git a/packages/plugin-vue/src/index.ts b/packages/plugin-vue/src/index.ts
index d210937..bd6c0fc 100644
--- a/packages/plugin-vue/src/index.ts
+++ b/packages/plugin-vue/src/index.ts
@@ -201,6 +201,11 @@ export default function vuePlugin(rawOptions: Options = {}): Plugin {
       }
 
       const { filename, query } = parseVueRequest(id)
+
+      if (query.scoped && !query.vue) {
+        return fs.readFileSync(filename, 'utf-8')
+      }
+
       // select corresponding block for sub-part virtual modules
       if (query.vue) {
         if (query.src) {
@@ -233,6 +238,20 @@ export default function vuePlugin(rawOptions: Options = {}): Plugin {
       if (query.raw || query.url) {
         return
       }
+
+      if (!query.vue && query.scoped && query.id) {
+        const result = options.compiler.compileStyle({
+          filename,
+          source: code,
+          id: `data-v-${query.id}`,
+          scoped: true,
+          isProd: options.isProduction,
+        })
+        return {
+          code: result.code,
+        }
+      }
+
       if (!filter(filename) && !query.vue) {
         if (
           !query.vue &&
diff --git a/packages/plugin-vue/src/utils/query.ts b/packages/plugin-vue/src/utils/query.ts
index 66fe103..29417a2 100644
--- a/packages/plugin-vue/src/utils/query.ts
+++ b/packages/plugin-vue/src/utils/query.ts
@@ -7,6 +7,7 @@ export interface VueQuery {
   raw?: boolean
   url?: boolean
   scoped?: boolean
+  id?: string
 }
 
 export function parseVueRequest(id: string): {
